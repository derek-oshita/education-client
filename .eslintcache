[{"/Users/derekoshita/Downloads/projects/showwcase-challenge-client/src/index.tsx":"1","/Users/derekoshita/Downloads/projects/showwcase-challenge-client/src/App.tsx":"2","/Users/derekoshita/Downloads/projects/showwcase-challenge-client/src/components/Home/Home.tsx":"3","/Users/derekoshita/Downloads/projects/showwcase-challenge-client/src/components/Button/Button.tsx":"4","/Users/derekoshita/Downloads/projects/showwcase-challenge-client/src/components/IndexPage/IndexPage.tsx":"5","/Users/derekoshita/Downloads/projects/showwcase-challenge-client/src/config/routes.tsx":"6","/Users/derekoshita/Downloads/projects/showwcase-challenge-client/src/components/ShowName/ShowName.tsx":"7","/Users/derekoshita/Downloads/projects/showwcase-challenge-client/src/components/CreateName/CreateName.tsx":"8","/Users/derekoshita/Downloads/projects/showwcase-challenge-client/src/components/PostList/PostList.tsx":"9","/Users/derekoshita/Downloads/projects/showwcase-challenge-client/src/components/Modal/Modal.tsx":"10","/Users/derekoshita/Downloads/projects/showwcase-challenge-client/src/components/Modal/ModalContent.tsx":"11","/Users/derekoshita/Downloads/projects/showwcase-challenge-client/src/components/PostItem/PostItem.tsx":"12","/Users/derekoshita/Downloads/projects/showwcase-challenge-client/src/components/Autocomplete/Autocomplete.tsx":"13"},{"size":289,"mtime":1607582500796,"results":"14","hashOfConfig":"15"},{"size":341,"mtime":1607657745030,"results":"16","hashOfConfig":"15"},{"size":845,"mtime":1607721492448,"results":"17","hashOfConfig":"15"},{"size":222,"mtime":1607645334716,"results":"18","hashOfConfig":"15"},{"size":2173,"mtime":1607721424732,"results":"19","hashOfConfig":"15"},{"size":369,"mtime":1607649246092,"results":"20","hashOfConfig":"15"},{"size":407,"mtime":1607658823900,"results":"21","hashOfConfig":"15"},{"size":1225,"mtime":1607649417302,"results":"22","hashOfConfig":"15"},{"size":568,"mtime":1607711102070,"results":"23","hashOfConfig":"15"},{"size":787,"mtime":1607673149653,"results":"24","hashOfConfig":"15"},{"size":4127,"mtime":1607716095614,"results":"25","hashOfConfig":"15"},{"size":533,"mtime":1607675029176,"results":"26","hashOfConfig":"15"},{"size":1971,"mtime":1607722152873,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"7x7b8s",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"30"},"/Users/derekoshita/Downloads/projects/showwcase-challenge-client/src/index.tsx",[],["62","63"],"/Users/derekoshita/Downloads/projects/showwcase-challenge-client/src/App.tsx",[],"/Users/derekoshita/Downloads/projects/showwcase-challenge-client/src/components/Home/Home.tsx",["64","65","66"],"import React, { useState } from 'react'; \nimport ShowName from '../ShowName/ShowName'\nimport CreateName from '../CreateName/CreateName'; \nimport Autocomplete from '../Autocomplete/Autocomplete'; \nimport { Link } from 'react-router-dom'; \n// import Button from '../Button/Button'; \nimport './Home.css'; \n\n\nconst Home: React.FC = () => {\n    const [name, setName] = useState(''); \n\n    const addName: AddName = newName => {\n        setName(newName)\n    }\n    return (\n        <div>\n            <h1 className=\"home-header animate__animated animate__fadeInDown\">Welcome to Education Showwcase</h1>\n            <p className=\"sub-header\">Type your name and click \"Enter\" to begin!</p>\n            <CreateName addName={addName}/>\n\n\n            {/* AUTOCOMPLETE TESTING HERE */}\n            <Autocomplete />\n        </div>\n    )\n}\n\nexport default Home; ","/Users/derekoshita/Downloads/projects/showwcase-challenge-client/src/components/Button/Button.tsx",[],"/Users/derekoshita/Downloads/projects/showwcase-challenge-client/src/components/IndexPage/IndexPage.tsx",["67","68"],"import React, { useState } from 'react'; \nimport ShowName from '../ShowName/ShowName'; \nimport PostList from '../PostList/PostList'; \nimport Modal from '../Modal/Modal'; \nimport ModalContent from '../Modal/ModalContent'; \nimport Autocomplete from '../Autocomplete/Autocomplete'; \nimport { withRouter, useParams } from 'react-router-dom'; \nimport './IndexPage.css'; \nimport { toEditorSettings } from 'typescript';\n\ninterface RouteParams {\n    id: Name; \n}\n\n// consider another element to replace w/ the modal\n\n/* <ShowName name={params.id}/> */\n\n/* <Modal modalOpen={modalOpen}>\n<ModalContent setModalOpen={setModalOpen} />\n</Modal> */\n\n/* \n<div className=\"container\">\n<button onClick={() => setModalOpen(true)} className=\"btn\">Create</button></div>\n*/\n\nconst initialPosts: Array<Post> = []; \n\n\nconst IndexPage: React.FC = () => {\n    const [modalOpen, setModalOpen] = useState(false)\n    const [posts, setPosts] = useState(initialPosts); \n\n    const params  = useParams<RouteParams>(); \n\n    // need to figure out how to handle more values\n    const addPost = (nameOfSchool: Name, degree: Name, fieldOfStudy: Name, newStartYear: Year, newEndYear: Year, newGrade: Year, newDescriptionField: string) => {\n        setPosts([...posts, { nameOfSchool: nameOfSchool, degree: degree,  fieldOfStudy: fieldOfStudy, startYear: newStartYear, endYear: newEndYear, grade: newGrade, descriptionField: newDescriptionField}])\n    } \n\n    return(\n        <>\n        <div className=\"index-container\">\n            <PostList posts={posts}/>\n                <div className=\"table\">\n                    <ShowName name={params.id}/>\n                        <div className=\"container\">\n                            <button onClick={() => setModalOpen(true)} className=\"btn\">Create</button>\n                        </div>\n                        <section className=\"example\" >\n                            <Modal modalOpen={modalOpen}>\n                                <ModalContent setModalOpen={setModalOpen} addPost={addPost}/>\n                            </Modal> \n                        </section>\n                </div>\n        </div>\n        </>\n    )\n}\n\nexport default withRouter(IndexPage); ","/Users/derekoshita/Downloads/projects/showwcase-challenge-client/src/config/routes.tsx",[],"/Users/derekoshita/Downloads/projects/showwcase-challenge-client/src/components/ShowName/ShowName.tsx",[],"/Users/derekoshita/Downloads/projects/showwcase-challenge-client/src/components/CreateName/CreateName.tsx",["69"],"import React, { useState, ChangeEvent, FormEvent } from 'react'; \nimport './CreateName.css'; \nimport { Link, withRouter, RouteComponentProps, useHistory } from 'react-router-dom'; \n\ninterface CreateNameProps {\n    addName: AddName; \n}\n\nconst CreateName: React.FC<CreateNameProps & RouteComponentProps> = ({ addName }) => {\n    const [ newName, setNewName ] = useState(''); \n\n    const history = useHistory(); \n\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n        setNewName(e.target.value)\n    }\n\n    const handleSubmit = (e: FormEvent<HTMLButtonElement>) => {\n        e.preventDefault(); \n        addName(newName); \n        history.push(`/${newName}`); \n    }\n\n    return (\n        <div className=\"container\" id=\"textfield-container\">\n            <form>\n                {/* <input onChange={nameHandler} id=\"input-name\" className=\"input-field\"/> */}\n                <input value={newName} onChange={handleChange} id=\"input-name\" className=\"input-field\"/>\n                <div className=\"container\">\n                    <button className=\"btn\" type=\"submit\" onClick={handleSubmit}>Enter</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default withRouter(CreateName); \n\n","/Users/derekoshita/Downloads/projects/showwcase-challenge-client/src/components/PostList/PostList.tsx",["70"],"import React, { useState } from 'react'; \nimport { withRouter, RouteComponentProps } from 'react-router-dom'; \nimport PostItem from '../PostItem/PostItem'; \nimport './PostList.css'; \n\n\ninterface PostListProps {\n    posts: Array<Post>; \n}\n\nconst PostList: React.FC<PostListProps & RouteComponentProps> = ({ posts }) => {\n\n\n    return(\n        <div className=\"sidebar\">\n            <h2>PostList Component</h2>\n            {posts.map(post => {\n                return <PostItem post={post} />; \n            })}\n        </div>\n    )\n}\n\nexport default withRouter(PostList); ","/Users/derekoshita/Downloads/projects/showwcase-challenge-client/src/components/Modal/Modal.tsx",["71","72"],"import React from 'react'; \nimport { createPortal } from 'react-dom'; \nimport { withRouter, RouteComponentProps } from 'react-router-dom'; \nimport './Modal.css'; \nimport ModalContent from './ModalContent'; \nimport styled from 'styled-components'; \n\nconst Wrapper = styled.div`\n    positon: absolute; \n    top: 0; \n    left: 0; \n    display: flex; \n    align-items: center; \n    justify-content: center; \n    width: 50vw; \n    height: 60vh; \n`\n\n// background: rgba(0,0,0,0.1); \n\n\nconst Modal: React.FC<ModalProps & RouteComponentProps> = ({ modalOpen, children }) => {\n    if (!modalOpen) return null; \n    \n    return (\n        <Wrapper>\n            {/* <ModalContent setModalOpen={() => false }/> */}\n            {children}\n        </Wrapper>\n    )\n}\n\nexport default withRouter(Modal); ","/Users/derekoshita/Downloads/projects/showwcase-challenge-client/src/components/Modal/ModalContent.tsx",[],"/Users/derekoshita/Downloads/projects/showwcase-challenge-client/src/components/PostItem/PostItem.tsx",[],["73","74"],"/Users/derekoshita/Downloads/projects/showwcase-challenge-client/src/components/Autocomplete/Autocomplete.tsx",["75","76"],"import * as React from 'react'; \nimport { BehaviorSubject } from 'rxjs';\nimport { withRouter } from 'react-router-dom'; \nimport './Autocomplete.css'; \n\nimport MenuItem from '@material-ui/core/MenuItem'; \nimport TextField from '@material-ui/core/TextField'; \nimport Paper from '@material-ui/core/Paper'; \n\n\n// convert values from react's onChange event handler into RxJS stream of values\nconst subject$ = new BehaviorSubject(''); \n\nconst Autocomplete: React.FC = () => {\n    // values\n    const [value, setValue] = React.useState(''); \n    // suggestions\n    const [suggestions, setSuggestions] = React.useState([]); \n\n\n    // callback for every change in input field\n    React.useEffect(() => {\n        const subscription = subject$.subscribe(\n        value => {\n            // store new value in state\n        }, \n        error => {\n            // handle error here\n        }\n    ); \n        return () => subscription.unsubscribe(); \n    }, []); \n\n    // send new vlues to $subject observable in the event handler\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setValue(e.target.value); \n        subject$.next(e.target.value); \n    }\n\n    // their data contains a key property, this is what it looks like: \n    // const renderSuggestion = (suggestion: any) => {\n    //     return <MenuItem key={suggestion.symbol}>{suggestion.name}</MenuItem>\n    // }\n\n    // I don't have a key property so just sticking to search by name\n    const renderSuggestion = (suggestion: any) => {\n        return <MenuItem key={suggestion.name}>{suggestion.name}</MenuItem>\n    }\n\n\n    const hasSuggestions = suggestions.length > 0; \n\n    return (\n        <div>\n            <TextField inputProps={{style: {fontSize: 20}}} fullWidth onChange={handleChange} value={value} placeholder=\"Search for your school...\"/>\n            {hasSuggestions && <Paper>suggestions.map(renderSuggestion)</Paper>}\n        </div>\n    )\n\n\n\n}\n\nexport default withRouter(Autocomplete); ",{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":2,"column":8,"nodeType":"83","messageId":"84","endLine":2,"endColumn":16},{"ruleId":"81","severity":1,"message":"85","line":5,"column":10,"nodeType":"83","messageId":"84","endLine":5,"endColumn":14},{"ruleId":"81","severity":1,"message":"86","line":11,"column":12,"nodeType":"83","messageId":"84","endLine":11,"endColumn":16},{"ruleId":"81","severity":1,"message":"87","line":6,"column":8,"nodeType":"83","messageId":"84","endLine":6,"endColumn":20},{"ruleId":"81","severity":1,"message":"88","line":9,"column":10,"nodeType":"83","messageId":"84","endLine":9,"endColumn":26},{"ruleId":"81","severity":1,"message":"85","line":3,"column":10,"nodeType":"83","messageId":"84","endLine":3,"endColumn":14},{"ruleId":"81","severity":1,"message":"89","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":25},{"ruleId":"81","severity":1,"message":"90","line":2,"column":10,"nodeType":"83","messageId":"84","endLine":2,"endColumn":22},{"ruleId":"81","severity":1,"message":"91","line":5,"column":8,"nodeType":"83","messageId":"84","endLine":5,"endColumn":20},{"ruleId":"77","replacedBy":"92"},{"ruleId":"79","replacedBy":"93"},{"ruleId":"81","severity":1,"message":"94","line":18,"column":25,"nodeType":"83","messageId":"84","endLine":18,"endColumn":39},{"ruleId":"81","severity":1,"message":"95","line":46,"column":11,"nodeType":"83","messageId":"84","endLine":46,"endColumn":27},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"@typescript-eslint/no-unused-vars","'ShowName' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'name' is assigned a value but never used.","'Autocomplete' is defined but never used.","'toEditorSettings' is defined but never used.","'useState' is defined but never used.","'createPortal' is defined but never used.","'ModalContent' is defined but never used.",["96"],["97"],"'setSuggestions' is assigned a value but never used.","'renderSuggestion' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]